#!/bin/bash

echo "üöÄ Setup do KVN Suporte - Sistema de Suporte Inteligente"
echo "================================================"

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para print colorido
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# Verificar se Node.js est√° instalado
if ! command -v node &> /dev/null; then
    print_error "Node.js n√£o encontrado. Instale Node.js 18+ primeiro."
    exit 1
fi

# Verificar vers√£o do Node
NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt "18" ]; then
    print_error "Node.js vers√£o 18+ √© necess√°ria. Vers√£o atual: $(node --version)"
    exit 1
fi

print_status "Node.js $(node --version) encontrado"

# Instalar depend√™ncias
print_info "Instalando depend√™ncias..."
npm install

if [ $? -eq 0 ]; then
    print_status "Depend√™ncias instaladas com sucesso"
else
    print_error "Erro ao instalar depend√™ncias"
    exit 1
fi

# Copiar .env.example para .env se n√£o existir
if [ ! -f ".env" ]; then
    print_info "Criando arquivo .env..."
    cp .env.example .env
    print_status "Arquivo .env criado"
    print_warning "IMPORTANTE: Configure as vari√°veis no arquivo .env antes de continuar"
else
    print_info "Arquivo .env j√° existe"
fi

# Verificar se DATABASE_URL est√° configurada
if grep -q "your_database_url_here" .env 2>/dev/null; then
    print_warning "Configure DATABASE_URL no arquivo .env"
    print_info "1. Crie um banco no Neon: https://neon.tech"
    print_info "2. Copie a URL de conex√£o"
    print_info "3. Cole no arquivo .env"
else
    # Gerar Prisma Client
    print_info "Gerando Prisma Client..."
    npx prisma generate
    
    if [ $? -eq 0 ]; then
        print_status "Prisma Client gerado"
        
        # Executar migra√ß√µes se DATABASE_URL estiver configurada
        print_info "Executando migra√ß√µes do banco de dados..."
        npx prisma migrate dev --name init
        
        if [ $? -eq 0 ]; then
            print_status "Migra√ß√µes executadas com sucesso"
        else
            print_warning "Erro nas migra√ß√µes. Verifique DATABASE_URL"
        fi
    else
        print_warning "Erro ao gerar Prisma Client"
    fi
fi

echo ""
echo "üéâ Setup conclu√≠do!"
echo ""
print_info "Pr√≥ximos passos:"
echo "1. Configure as vari√°veis no arquivo .env"
echo "2. Execute: npm run dev"
echo "3. Acesse: http://localhost:3000"
echo ""
print_info "Para deploy em produ√ß√£o, consulte: DEPLOY_GUIDE.md"
echo ""
print_status "Sistema pronto para uso! üöÄ"
